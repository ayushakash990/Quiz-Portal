/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Squiz;

import static Squiz.SelectStudent.socket;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import javax.swing.JOptionPane;

/**
 *
 * @author Harshit
 */
public class sectionStudent extends javax.swing.JFrame {

    /**
     * Creates new form sectionStudent
     */
    static String username;
    static String qcode;
    static String subject;
    static Socket socket;
    static String[][] questionmcqs;
    static String[][] questionmcqm;
    static String[][] questiontf;
    static int gettime[]; 
    static int totalquestionsmcqs;
    static int totalquestionsmcqm;
    static int totalquestionstf;

    static int mcqsscore;
    static int mcqmscore;
    static int tfscore;
    static int currenttf;
    static int currentmcqs;
    static int currentmcqm;
    static AnswersStudent s1;
    static AnswerTrue t1;
    static AnswerMultiple m1;

    public static int flags;
    public static int flagm;
    public static int flagt;
    
    static boolean mcqsfirstclick;
    static boolean mcqmfirstclick;
    static boolean tffirstclick;
    public static int flagload;

    public sectionStudent(Socket socket, String subject,String username, String qcode) {
        initComponents();
        this.username = username;
        this.qcode = qcode;
        this.socket = socket;
        this.flags = 0;
        this.flagm = 0;
        this.flagt = 0;
        this.flagload = 0;
        this.subject=subject;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mcqsingle = new javax.swing.JLabel();
        endquiz = new javax.swing.JLabel();
        loadquiz = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mcqmulti = new javax.swing.JLabel();
        truefalse = new javax.swing.JLabel();
        mcqs = new javax.swing.JLabel();
        back = new javax.swing.JLabel();
        cross = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mcqsingle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mcqsingleMouseClicked(evt);
            }
        });
        getContentPane().add(mcqsingle, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 360, 50));

        endquiz.setBackground(new java.awt.Color(51, 153, 0));
        endquiz.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        endquiz.setForeground(new java.awt.Color(255, 255, 255));
        endquiz.setText("END QUIZ");
        endquiz.setOpaque(true);
        endquiz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                endquizMouseClicked(evt);
            }
        });
        getContentPane().add(endquiz, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 520, 210, 60));

        loadquiz.setBackground(new java.awt.Color(51, 153, 0));
        loadquiz.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        loadquiz.setForeground(new java.awt.Color(255, 255, 255));
        loadquiz.setText("LOAD QUIZ");
        loadquiz.setOpaque(true);
        loadquiz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loadquizMouseClicked(evt);
            }
        });
        getContentPane().add(loadquiz, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, 210, 60));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Squiz/leaderboard-icon-19.png"))); // NOI18N
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 60, 90, 90));

        mcqmulti.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mcqmultiMouseClicked(evt);
            }
        });
        getContentPane().add(mcqmulti, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 316, 360, 50));

        truefalse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                truefalseMouseClicked(evt);
            }
        });
        getContentPane().add(truefalse, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 396, 360, 50));
        getContentPane().add(mcqs, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 230, 360, 50));

        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 6, 40, 30));

        cross.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crossMouseClicked(evt);
            }
        });
        getContentPane().add(cross, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 6, 50, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Squiz/section.jpg"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel1MouseClicked

    private void loadquizMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loadquizMouseClicked
        if (flagload == 0) {
            try {
                ObjectOutputStream objectOutputStream = new ObjectOutputStream(socket.getOutputStream());
                String[] s = {"questionanswermcqs", qcode};
                objectOutputStream.writeObject(s);
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                ObjectInputStream objectInputStream = new ObjectInputStream(socket.getInputStream());
                questionmcqs = (String[][]) objectInputStream.readObject();
            } catch (IOException | ClassNotFoundException e) {
                e.printStackTrace();
            }
            totalquestionsmcqs = questionmcqs.length;
            System.out.println("No of single mcqs - " + totalquestionsmcqs);

            currentmcqs = 0;
            mcqsscore = 0;

            try {
                ObjectOutputStream objectOutputStream = new ObjectOutputStream(socket.getOutputStream());
                String[] s = {"questionanswermcqm", qcode};
                objectOutputStream.writeObject(s);
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                ObjectInputStream objectInputStream = new ObjectInputStream(socket.getInputStream());
                questionmcqm = (String[][]) objectInputStream.readObject();
            } catch (IOException | ClassNotFoundException e) {
                e.printStackTrace();
            }
            totalquestionsmcqm = questionmcqm.length;
            System.out.println("No of multiple mcqs - " + totalquestionsmcqm);

            currentmcqm = 0;
            mcqmscore = 0;

            try {
                ObjectOutputStream objectOutputStream = new ObjectOutputStream(socket.getOutputStream());
                String[] s = {"questionanswertf", qcode};
                objectOutputStream.writeObject(s);
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                ObjectInputStream objectInputStream = new ObjectInputStream(socket.getInputStream());
                questiontf = (String[][]) objectInputStream.readObject();
            } catch (IOException | ClassNotFoundException e) {
                e.printStackTrace();
            }
            totalquestionstf = questiontf.length;
            System.out.println("No of true/false questions - " + totalquestionstf);

            currenttf = 0;
            tfscore = 0;
              
            try {
                ObjectOutputStream objectOutputStream = new ObjectOutputStream(socket.getOutputStream());
                String[] s = {"gettime",subject, qcode};
                objectOutputStream.writeObject(s);
            } catch (IOException e) {
                e.printStackTrace();
            }
            try {
                ObjectInputStream objectInputStream = new ObjectInputStream(socket.getInputStream());
                gettime = (int[]) objectInputStream.readObject();
            } catch (IOException | ClassNotFoundException e) {
                e.printStackTrace();
            }
            s1 = new AnswersStudent(socket, username, qcode, currentmcqs, mcqsscore, gettime[0], totalquestionsmcqs, questionmcqs);
            s1.setVisible(false);
            m1 = new AnswerMultiple(socket, username, qcode, currentmcqm, mcqmscore, gettime[1], totalquestionsmcqm, questionmcqm);
            m1.setVisible(false);
            t1 = new AnswerTrue(socket, username, qcode, currenttf, tfscore, gettime[2], totalquestionstf, questiontf);
            t1.setVisible(false);
            flagload = 1;
            mcqsfirstclick = true;
            mcqmfirstclick = true;
            tffirstclick = true;

            JOptionPane.showMessageDialog(null, "Quiz Loaded"); 
        } else {
            JOptionPane.showMessageDialog(null, "Already Loaded");
        }
    }//GEN-LAST:event_loadquizMouseClicked

    private void mcqsingleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mcqsingleMouseClicked
        if (flags == 0) {
            s1.setVisible(true);
            if(mcqsfirstclick==true){
                   s1.tt.start();
                   mcqsfirstclick = false;
            }
            else
                s1.tt.resume();
        } else {
            JOptionPane.showMessageDialog(null, "Section Completed!");
        }
    }//GEN-LAST:event_mcqsingleMouseClicked

    private void mcqmultiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mcqmultiMouseClicked
        // TODO add your handling code here:
        if (flagm == 0) {
            m1.setVisible(true);
            if(mcqmfirstclick==true){
                   m1.ttm.start();
                   mcqmfirstclick = false;
            }
            else
                m1.ttm.resume();
        } else {
            JOptionPane.showMessageDialog(null, "Section Completed!");
        }
    }//GEN-LAST:event_mcqmultiMouseClicked

    private void truefalseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_truefalseMouseClicked
        // TODO add your handling code here:
        if (flagt == 0) {
            t1.setVisible(true);
            if(tffirstclick==true){
                   t1.ttt.start();
                   tffirstclick = false;
            }
            else
                t1.ttt.resume();
        } else {
            JOptionPane.showMessageDialog(null, "Section completed!");
        }
    }//GEN-LAST:event_truefalseMouseClicked

    private void endquizMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endquizMouseClicked
        JOptionPane.showMessageDialog(null, "THANK YOU!");
        new Rating(socket, username, qcode).setVisible(true);
        dispose();
    }//GEN-LAST:event_endquizMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
        new SelectStudent(socket, username).setVisible(true);
        dispose();
    }//GEN-LAST:event_backMouseClicked

    private void crossMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crossMouseClicked
        System.exit(0);
    }//GEN-LAST:event_crossMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
       new Leaderboard(socket,qcode).setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sectionStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sectionStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sectionStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sectionStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() 
            {
                new sectionStudent(socket, subject,username, qcode).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    private javax.swing.JLabel cross;
    private javax.swing.JLabel endquiz;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel loadquiz;
    private javax.swing.JLabel mcqmulti;
    private javax.swing.JLabel mcqs;
    private javax.swing.JLabel mcqsingle;
    private javax.swing.JLabel truefalse;
    // End of variables declaration//GEN-END:variables
}
